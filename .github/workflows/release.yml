---
name: Release images

'on':
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  build-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      owner: ${{ steps.prepare.outputs.owner }}
      base_sha: ${{ steps.prepare.outputs.base_sha }}
      base_latest: ${{ steps.prepare.outputs.base_latest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y podman uidmap

      - name: Log in to GHCR
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${CR_PAT}" | sudo podman login "${REGISTRY}" \
            -u "${{ github.actor }}" --password-stdin

      - name: Prepare image tags
        id: prepare
        run: |
          OWNER_INPUT="${GITHUB_REPOSITORY_OWNER}"
          OWNER="$(
            echo "${OWNER_INPUT}" | tr '[:upper:]' '[:lower:]'
          )"
          BASE_SHA="${REGISTRY}/${OWNER}/bootc-base:${GITHUB_SHA}"
          BASE_LATEST="${REGISTRY}/${OWNER}/bootc-base:latest"
          {
            echo "owner=${OWNER}"
            echo "base_sha=${BASE_SHA}"
            echo "base_latest=${BASE_LATEST}"
          } >> "${GITHUB_OUTPUT}"

      - name: Build and push base image
        run: |
          set -euo pipefail
          BASE_LOCAL_SHA="localhost/bootc-base:${GITHUB_SHA}"
          BASE_LOCAL_LATEST="localhost/bootc-base:latest"
          BASE_REMOTE_SHA="${{ steps.prepare.outputs.base_sha }}"
          BASE_REMOTE_LATEST="${{ steps.prepare.outputs.base_latest }}"
          sudo podman build \
            --pull=always \
            --tag "${BASE_LOCAL_SHA}" \
            -f Containerfiles/Containerfile.base \
            .
          sudo podman tag "${BASE_LOCAL_SHA}" "${BASE_LOCAL_LATEST}"
          sudo podman tag "${BASE_LOCAL_SHA}" "${BASE_REMOTE_SHA}"
          sudo podman tag "${BASE_LOCAL_SHA}" "${BASE_REMOTE_LATEST}"
          sudo podman push "${BASE_REMOTE_SHA}"
          sudo podman push "${BASE_REMOTE_LATEST}"

  build-server:
    needs: build-base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y podman uidmap

      - name: Log in to GHCR
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${CR_PAT}" | sudo podman login "${REGISTRY}" \
            -u "${{ github.actor }}" --password-stdin

      - name: Pull base image
        run: sudo podman pull "${{ needs.build-base.outputs.base_sha }}"

      - name: Build and push server image
        run: |
          set -euo pipefail
          OWNER="${{ needs.build-base.outputs.owner }}"
          BASE_SHA="${{ needs.build-base.outputs.base_sha }}"
          SERVER_LOCAL_SHA="localhost/bootc-server:${GITHUB_SHA}"
          SERVER_LOCAL_LATEST="localhost/bootc-server:latest"
          SERVER_REMOTE_SHA="${REGISTRY}/${OWNER}/bootc-server:${GITHUB_SHA}"
          SERVER_REMOTE_LATEST="${REGISTRY}/${OWNER}/bootc-server:latest"
          sudo podman build \
            --build-arg BASE_IMAGE="${BASE_SHA}" \
            --tag "${SERVER_LOCAL_SHA}" \
            -f Containerfiles/Containerfile.server \
            .
          sudo podman tag "${SERVER_LOCAL_SHA}" "${SERVER_LOCAL_LATEST}"
          sudo podman tag "${SERVER_LOCAL_SHA}" "${SERVER_REMOTE_SHA}"
          sudo podman tag "${SERVER_LOCAL_SHA}" "${SERVER_REMOTE_LATEST}"
          sudo podman push "${SERVER_REMOTE_SHA}"
          sudo podman push "${SERVER_REMOTE_LATEST}"

  build-personal:
    needs: build-base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y podman uidmap

      - name: Log in to GHCR
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${CR_PAT}" | sudo podman login "${REGISTRY}" \
            -u "${{ github.actor }}" --password-stdin

      - name: Pull base image
        run: sudo podman pull "${{ needs.build-base.outputs.base_sha }}"

      - name: Build and push personal image
        run: |
          set -euo pipefail
          OWNER="${{ needs.build-base.outputs.owner }}"
          BASE_SHA="${{ needs.build-base.outputs.base_sha }}"
          PERSONAL_LOCAL_SHA="localhost/bootc-personal:${GITHUB_SHA}"
          PERSONAL_LOCAL_LATEST="localhost/bootc-personal:latest"
          PERSONAL_REMOTE_SHA="${REGISTRY}/${OWNER}/bootc-personal:${GITHUB_SHA}"
          PERSONAL_REMOTE_LATEST="${REGISTRY}/${OWNER}/bootc-personal:latest"
          sudo podman build \
            --build-arg BASE_IMAGE="${BASE_SHA}" \
            --tag "${PERSONAL_LOCAL_SHA}" \
            -f Containerfiles/Containerfile.personal \
            .
          sudo podman tag "${PERSONAL_LOCAL_SHA}" "${PERSONAL_LOCAL_LATEST}"
          sudo podman tag "${PERSONAL_LOCAL_SHA}" "${PERSONAL_REMOTE_SHA}"
          sudo podman tag "${PERSONAL_LOCAL_SHA}" "${PERSONAL_REMOTE_LATEST}"
          sudo podman push "${PERSONAL_REMOTE_SHA}"
          sudo podman push "${PERSONAL_REMOTE_LATEST}"
